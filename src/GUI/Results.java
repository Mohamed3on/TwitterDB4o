/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.util.ArrayList;
import twitter.Hashtag;
import twitter.Post;
import twitter.SearchResult;
import twitter.User;

/**
 *
 * @author Group
 */
public class Results extends javax.swing.JFrame {

    private SearchResult searchResult;
    private User loggedUser;
    /**
     * Creates new form Results
     */
    public Results() {
        initComponents();
    }
    public Results(SearchResult searchResult, User loggedUser) {
        this.loggedUser =  loggedUser;
        this.searchResult = searchResult;
        initComponents();
        this.setLocationRelativeTo(null);
        setHashtagsList();
        setUsersList();
        setPostsList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        postsList = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        hashtagsList = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Search Results");

        jLabel1.setText("Users");

        userList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        userList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(userList);

        postsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        postsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                postsListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(postsList);

        jLabel2.setText("Posts");

        hashtagsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        hashtagsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hashtagsListMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(hashtagsList);

        jLabel3.setText("Hashtags");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
       // Show the selected and double clicked user 
    private void userListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userListMouseClicked
     
        if (evt.getClickCount() == 2) 
        {
            ArrayList <User> usersList = searchResult.getUsers();
            User selectedUser = usersList.get(userList.getSelectedIndex());
            Profile showProfile = new Profile(selectedUser,loggedUser);
            showProfile.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_userListMouseClicked

       // Show the selected and double clicked Post    
    private void postsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_postsListMouseClicked
          
        if (evt.getClickCount() == 2) 
        {
            ArrayList <Post> posts = searchResult.getPosts();
            Post selectedPost = posts.get(postsList.getSelectedIndex());
            ShowPost showPost = new ShowPost(selectedPost,loggedUser);
            showPost.checkIfOwnPost() ; // check if the selected post can be deleted by this user 
            showPost.setVisible(true);
        }
    }//GEN-LAST:event_postsListMouseClicked

    // // Show the selected and double clicked Hashtag 
    private void hashtagsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hashtagsListMouseClicked
        
        if (evt.getClickCount() == 2) 
        {
            ArrayList <Hashtag> hashtagList = searchResult.getHashtags();
            Hashtag selectedHashtag = hashtagList.get(hashtagsList.getSelectedIndex());
            ShowPostsWithHashtag showPost = new ShowPostsWithHashtag(selectedHashtag, loggedUser);
            showPost.setVisible(true);
        }
    }//GEN-LAST:event_hashtagsListMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Results.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Results.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Results.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Results.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Results().setVisible(true);
            }
        });
    }
    
    // Show all the Users that contain the Search String in a JList of 
    private void setUsersList()
    {
        
        ArrayList <User> users = searchResult.getUsers();
        String [] usersHandles = new String [users.size()];
        for(int i=0;i<users.size();i++)
        {
            usersHandles[i]=users.get(i).getHandle();
        }
        userList = new javax.swing.JList<>(usersHandles);

        userList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = usersHandles;
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
            
        });
        userList.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            userListMouseClicked(evt);
        }
        });
        jScrollPane1.setViewportView(userList);

    }
    
      // Show all the Posts that contain the Search String in a JList of 
    private void setPostsList()
    {
      
        ArrayList <Post> posts = searchResult.getPosts();
        String [] postsBodies = new String [posts.size()];
        for(int i=0;i<posts.size();i++)
        {
            postsBodies[i]=posts.get(i).getBody();
        }
        postsList = new javax.swing.JList<>(postsBodies);

        postsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = postsBodies;
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        postsList.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            postsListMouseClicked(evt);
        }
        });
        jScrollPane2.setViewportView(postsList);

    }

     // Show all the Hashtags that contain the Search String in a JList of 
    private void setHashtagsList()
    {
       
        ArrayList <Hashtag> hashTags = searchResult.getHashtags();
        String [] hashTagsNames = new String [hashTags.size()];
        for(int i=0;i<hashTags.size();i++)
        {
            hashTagsNames[i] = hashTags.get(i).getHashtag();
        }
        hashtagsList = new javax.swing.JList<>(hashTagsNames);

        hashtagsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = hashTagsNames;
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        hashtagsList.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            hashtagsListMouseClicked(evt);
        }
        });
        jScrollPane3.setViewportView(hashtagsList);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> hashtagsList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> postsList;
    private javax.swing.JList<String> userList;
    // End of variables declaration//GEN-END:variables
}
